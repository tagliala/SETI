// Generated by CoffeeScript 1.4.0
(function() {
  "use strict";

  var HEAD, QUICK, TECHNICAL, UNPREDICTABLE, player, resetField;

  TECHNICAL = "technical";

  UNPREDICTABLE = "unpredictable";

  HEAD = "head";

  QUICK = "quick";

  player = function(speciality) {
    if (speciality == null) {
      speciality = null;
    }
    if (speciality != null) {
      return "<div class=\"player speciality speciality-" + speciality + "\">";
    } else {
      return "<div class=\"player\">";
    }
  };

  resetField = function() {
    var fieldHtml;
    fieldHtml = "<input type=\"checkbox\" id=\"setPiecesTakerHead\"/>\n<input type=\"hidden\" id=\"ballPossession\" value=\"50\"/>\n<input type=\"hidden\" id=\"playCreatively\" value=\"no\"/>\n<div class=\"soccer-field\" style=\"display: none\">\n  <div class=\"soccer-field-keeper\">\n    <ul class=\"unstyled players-row\">\n      <li class=\"player-empty-position\"></li>\n      <li class=\"player-empty-position\"></li>\n      <li class=\"player-position position-keeper drop\"><div></div></li>\n      <li class=\"player-empty-position\"></li>\n      <li class=\"player-empty-position\"></li>\n    </ul>\n  </div>\n  <div class=\"soccer-field-movement\">\n    <ul class=\"unstyled players-row players-row-defence\">\n      <li class=\"player-position position-defensive position-defender drop\"><div></div></li>\n      <li class=\"player-position position-defensive position-defender drop\"><div></div></li>\n      <li class=\"player-position position-defensive position-defender drop\"><div></div></li>\n      <li class=\"player-position position-defensive position-defender drop\"><div></div></li>\n      <li class=\"player-position position-defensive position-defender drop\"><div></div></li>\n    </ul>\n    <ul class=\"unstyled players-row players-row-midfield\">\n      <li class=\"player-position position-offensive position-winger drop\"><div></div></li>\n      <li class=\"player-position position-defensive position-inner drop\"><div></div></li>\n      <li class=\"player-position position-defensive position-inner drop\"><div></div></li>\n      <li class=\"player-position position-defensive position-inner drop\"><div></div></li>\n      <li class=\"player-position position-offensive position-winger drop\"><div></div></li>\n    </ul>\n    <ul class=\"unstyled players-row\">\n      <li class=\"player-empty-position\"><div class=\"trash-players hide\"><i class=\"icon-trash\"></i></div></li>\n      <li class=\"player-position position-offensive position-scorer drop\"><div></div></li>\n      <li class=\"player-position position-offensive position-scorer drop\"><div></div></li>\n      <li class=\"player-position position-offensive position-scorer drop\"><div></div></li>\n      <li class=\"player-empty-position\"><div class=\"trash-players hide\"><i class=\"icon-trash\"></i></div></li>\n    </ul>\n  </div>\n</div>";
    if ($("#field")[0] == null) {
      $("body").append("<div id=\"field\"></div>");
    }
    return $("#field").html(fieldHtml);
  };

  describe('SETI.Engine', function() {
    var $field;
    $field = null;
    beforeEach(function() {
      resetField();
      return $field = $("#field");
    });
    afterEach(function() {});
    describe('Quick', function() {
      it('handles one quick scorer', function() {
        var results;
        $(".position-scorer:nth(0)").html(player(QUICK));
        results = SETI.Engine.start();
        expect(results.SE.size()).toBe(1);
        expect(results.goals).toBe(0.0675);
        expect(results.SE.QuickShoot).toBe(0.0675);
        return expect(results.SE.QuickPass != null).toBe(false);
      });
      it('handles one quick winger', function() {
        var results;
        $(".position-winger:nth(0)").html(player(QUICK));
        results = SETI.Engine.start();
        expect(results.SE.size()).toBe(1);
        expect(results.goals).toBe(0.013499999999999956);
        expect(results.SE.QuickShoot).toBe(0.013499999999999956);
        return expect(results.SE.QuickPassing != null).toBe(false);
      });
      it('handles one quick scorer and one normal scorer', function() {
        var results;
        $(".position-scorer:nth(0)").html(player(QUICK));
        $(".position-scorer:nth(1)").html(player());
        results = SETI.Engine.start();
        expect(results.SE.size()).toBe(2);
        expect(results.goals).toBe(0.12517500000000004);
        expect(results.SE.QuickShoot).toBe(0.0675);
        return expect(results.SE.QuickPassing).toBe(0.05767500000000003);
      });
      it('handles one quick winger and one quick scorer as one quick winger and one normal scorer', function() {
        var results_1qw_1qs, results_1qw_1s;
        $(".position-winger:nth(0)").html(player(QUICK));
        $(".position-scorer:nth(0)").html(player());
        results_1qw_1s = SETI.Engine.start();
        expect(results_1qw_1s.SE.size()).toBe(2);
        expect(results_1qw_1s.goals).toBe(0.07117499999999999);
        expect(results_1qw_1s.SE.QuickShoot).toBe(0.013499999999999956);
        expect(results_1qw_1s.SE.QuickPassing).toBe(0.05767500000000003);
        $(".position-scorer:nth(0)").html(player(QUICK));
        results_1qw_1qs = SETI.Engine.start();
        expect(results_1qw_1qs.SE.size()).toBe(results_1qw_1s.SE.size());
        expect(results_1qw_1qs.goals).toBe(0.13776374999999996);
        expect(results_1qw_1qs.SE.QuickShoot).toBe(0.08008874999999993);
        return expect(results_1qw_1qs.SE.QuickPassing).toBe(results_1qw_1s.SE.QuickPassing);
      });
      return it('handles two quick wingers and one quick scorer as two quick wingers and one normal scorer', function() {
        var results_2qw_1qs, results_2qw_1s;
        $(".position-winger:nth(0)").html(player(QUICK));
        $(".position-winger:nth(1)").html(player(QUICK));
        $(".position-scorer:nth(0)").html(player());
        results_2qw_1s = SETI.Engine.start();
        expect(results_2qw_1s.SE.size()).toBe(2);
        expect(results_2qw_1s.goals).toBe(0.13884134437499995);
        expect(results_2qw_1s.SE.QuickShoot).toBe(0.026817749999999863);
        expect(results_2qw_1s.SE.QuickPassing).toBe(0.11202359437500009);
        $(".position-scorer:nth(0)").html(player(QUICK));
        results_2qw_1qs = SETI.Engine.start();
        expect(results_2qw_1qs.SE.size()).toBe(results_2qw_1s.SE.size());
        expect(results_2qw_1qs.goals).toBe(0.20453114625000002);
        expect(results_2qw_1qs.SE.QuickShoot).toBe(0.09250755187499993);
        return expect(results_2qw_1qs.SE.QuickPassing).toBe(results_2qw_1s.SE.QuickPassing);
      });
    });
    return describe('Head', function() {
      return it('handles two head wingers', function() {
        var results;
        $(".position-winger:nth(0)").html(player(HEAD));
        $(".position-winger:nth(1)").html(player(HEAD));
        results = SETI.Engine.start();
        expect(results.SE.size()).toBe(2);
        expect(results.goals).toBe(0.12878100000000003);
        expect(results.SE.HeadCross).toBe(0.05327100000000007);
        return expect(results.SE.HeadCorner).toBe(0.07550999999999997);
      });
    });
  });

}).call(this);
